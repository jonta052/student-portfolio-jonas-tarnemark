{"version":3,"sources":["webpack:///./src/components/Project.js","webpack:///./src/components/Projects.js","webpack:///./src/components/Hero.js","webpack:///./src/constants/services.js","webpack:///./src/components/Services.js","webpack:///./src/components/Jobs.js","webpack:///./src/pages/index.js","webpack:///./src/components/Blog.js","webpack:///./src/components/Blogs.js"],"names":["Project","description","title","github","stack","url","image","index","className","fluid","childImageSharp","map","item","key","id","href","Projects","projects","showLink","Title","project","to","Hero","file","target","rel","icon","text","Services","services","service","Jobs","data","console","log","jobs","allStrapiJobs","nodes","React","useState","value","setValue","company","position","date","desc","strapiId","onClick","name","query","allStrapiProjects","blogs","allStrapiBlogs","Layout","SEO","Blogs","Blog","category","slug","blog"],"mappings":"2KA8CeA,EA1CC,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,YAAaC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAChE,OACE,6BAASC,UAAU,WAEhBF,GACC,kBAAC,IAAD,CAAOG,MAAOH,EAAMI,gBAAgBD,MAAOD,UAAU,gBAEvD,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,kBAAhB,IAAmCD,EAAQ,EAA3C,KAEA,4BAAKL,GAAS,WACd,uBAAGM,UAAU,uBAAuBP,GACpC,yBAAKO,UAAU,iBACZJ,EAAMO,KAAI,SAAAC,GACT,OAAO,0BAAMC,IAAKD,EAAKE,IAAKF,EAAKV,WAGrC,yBAAKM,UAAU,iBACb,uBAAGO,KAAMZ,GACP,kBAAC,IAAD,CAAgBK,UAAU,kBAE5B,uBAAGO,KAAMV,GACP,kBAAC,IAAD,CAAeG,UAAU,sB,YCJtBQ,IAlBE,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUf,EAAsB,EAAtBA,MAAOgB,EAAe,EAAfA,SACnC,OACE,6BAASV,UAAU,oBACjB,kBAACW,EAAA,EAAD,CAAOjB,MAAOA,IACd,yBAAKM,UAAU,kCACZS,EAASN,KAAI,SAACS,EAASb,GACtB,OAAO,kBAAC,EAAD,eAASM,IAAKO,EAAQN,GAAIP,MAAOA,GAAWa,QAGtDF,GACC,kBAAC,OAAD,CAAMG,GAAG,YAAYb,UAAU,kBAA/B,mB,o+DC8EOc,EAzEF,WAAO,IAGKb,EAHN,OAEfc,KACEb,gBAAmBD,MAMvB,OACE,4BAAQD,UAAU,QAChB,yBAAKA,UAAU,8BACb,6BAASA,UAAU,aACjB,6BACE,yCACA,yBAAKA,UAAU,cACf,4EAAiD,6BAAjD,aAHF,sDAKE,6BALF,gEAOE,6BAPF,sDASE,6BATF,+CAWE,6BAXF,gDAY+C,6BAZ/C,OAY0D,IACxD,uBACEgB,OAAO,SACPC,IAAI,sBACJV,KAAK,0EAHP,UAbF,IAoBI,IACF,uBACES,OAAO,SACPC,IAAI,sBACJV,KAAK,iDAHP,SArBF,IA4BI,IACF,uBACES,OAAO,SACPC,IAAI,sBACJV,KAAK,kCAHP,UAMK,IAnCP,IAoCI,IACF,uBACES,OAAO,SACPC,IAAI,sBACJV,KAAK,sCAHP,qBAOA,6BA5CF,qCA8CE,6BA9CF,8CAgDE,6BACA,kBAAC,OAAD,CAAMM,GAAG,WAAWb,UAAU,OAA9B,gBAGA,kBAAC,IAAD,QAGJ,kBAAC,IAAD,CAAOC,MAAOA,EAAOD,UAAU,gB,wBCrFxB,GACb,CACEM,GAAI,EACJY,KAAM,kBAAC,IAAD,CAAQlB,UAAU,iBACxBN,MAAO,kBACPyB,KAAK,kJAEP,CACEb,GAAI,EACJY,KAAM,kBAAC,IAAD,CAAUlB,UAAU,iBAC1BN,MAAO,aACPyB,KAAK,kJAEP,CACEb,GAAI,EACJY,KAAM,kBAAC,IAAD,CAAWlB,UAAU,iBAC3BN,MAAO,aACPyB,KAAK,mJCOMC,EAvBE,WACf,OACE,6BAASpB,UAAU,mBACjB,kBAACW,EAAA,EAAD,CAAOjB,MAAM,aACb,yBAAKM,UAAU,kCACZqB,EAASlB,KAAI,SAAAmB,GAAW,IAEfhB,EAA0BgB,EAA1BhB,GAAIY,EAAsBI,EAAtBJ,KAAMxB,EAAgB4B,EAAhB5B,MAAOyB,EAASG,EAATH,KAEzB,OACE,6BAASd,IAAKC,EAAIN,UAAU,WACzBkB,EACD,4BAAKxB,GACL,yBAAKM,UAAU,cACf,2BAAImB,U,wBC0DHI,EApDF,WACX,IAAMC,EAAI,OACVC,QAAQC,IAAIF,GAFK,IAKSG,EACtBH,EADFI,cAAiBC,MAEnBJ,QAAQC,IAAIC,GAPK,MAQSG,IAAMC,SAAS,GAAlCC,EARU,KAQHC,EARG,OASyBN,EAAKK,GAAvCE,EATS,EASTA,QAASC,EATA,EASAA,SAAUC,EATV,EASUA,KAAMC,EAThB,EASgBA,KAGjC,OAFAZ,QAAQC,IAAIQ,EAASC,EAAUC,EAAMC,GAGnC,6BAASrC,UAAU,gBACjB,kBAACW,EAAA,EAAD,CAAOjB,MAAM,eACb,yBAAKM,UAAU,eAEb,yBAAKA,UAAU,iBACZ2B,EAAKxB,KAAI,SAACC,EAAML,GACf,OACE,4BACEM,IAAKD,EAAKkC,SACVC,QAAS,kBAAMN,EAASlC,IACxBC,UAAS,YAAaD,IAAUiC,GAAS,eAExC5B,EAAK8B,aAMd,6BAASlC,UAAU,YACjB,4BAAKmC,GACL,4BAAKD,GACL,uBAAGlC,UAAU,YAAYoC,GACxBC,EAAKlC,KAAI,SAAAC,GACR,OACE,yBAAKC,IAAKD,EAAKE,GAAIN,UAAU,YAC3B,kBAAC,IAAD,CAAoBA,UAAU,aAC9B,2BAAII,EAAKoC,YAMnB,kBAAC,OAAD,CAAM3B,GAAG,SAASb,UAAU,kBAA5B,a,oCCzCOyC,GAjBE,sBAAe,IAAZjB,EAAW,EAAXA,KAEcf,EAE1Be,EAFFkB,kBAAqBb,MACIc,EACvBnB,EADFoB,eAAkBf,MAEpB,OACE,kBAACgB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKpD,MAAM,MAAMD,YAAY,eAC7B,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAACe,EAAA,EAAD,CAAUC,SAAUA,EAAUf,MAAM,kBAAkBgB,UAAQ,IAC9D,kBAACqC,EAAA,EAAD,CAAOJ,MAAOA,EAAOjD,MAAM,mBAAmBgB,UAAQ,MAK1C,e,kHCSHsC,EAhCF,SAAC,GAAsD,IAApD1C,EAAmD,EAAnDA,GAAIZ,EAA+C,EAA/CA,MAAOI,EAAwC,EAAxCA,MAAOsC,EAAiC,EAAjCA,KAAMa,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,KAAMb,EAAW,EAAXA,KACtD,OACE,kBAAC,OAAD,CAAMxB,GAAE,UAAYqC,EAAQ7C,IAAKC,GAC/B,6BAASN,UAAU,QAEhBF,GACC,kBAAC,IAAD,CAAOG,MAAOH,EAAMI,gBAAgBD,MAAOD,UAAU,aAEvD,yBAAKA,UAAU,aAEb,4BAAKN,GAAS,WACd,2BAAI2C,GACJ,yBAAKrC,UAAU,eACb,2BAAIiD,GACJ,2BAAIb,QCIDW,IAlBM,SAAC,GAAgC,IAA9BJ,EAA6B,EAA7BA,MAAOjD,EAAsB,EAAtBA,MAAOgB,EAAe,EAAfA,SACpC,OACE,6BAASV,UAAU,WACjB,kBAACW,EAAA,EAAD,CAAOjB,MAAOA,IACd,yBAAKM,UAAU,+BACZ2C,EAAMxC,KAAI,SAAAgD,GACT,OAAO,kBAAC,EAAD,eAAM9C,IAAK8C,EAAK7C,IAAQ6C,QAIlCzC,GACC,kBAAC,OAAD,CAAMG,GAAG,QAAQb,UAAU,kBAA3B","file":"component---src-pages-index-js-7f174d61d6850bc12536.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { FaGithubSquare, FaShareSquare } from \"react-icons/fa\"\nconst Project = ({ description, title, github, stack, url, image, index }) => {\n  return (\n    <article className=\"project\">\n      {/* if image is not supplied, instead of breaking, dont show any image */}\n      {image && (\n        <Image fluid={image.childImageSharp.fluid} className=\"project-img\" />\n      )}\n      <div className=\"project-info\">\n        <span className=\"project-number\">0{index + 1}.</span>\n        {/* if title is not supplied, set a defualt title */}\n        <h3>{title || \"Projekt\"}</h3>\n        <p className=\"project-description\">{description}</p>\n        <div className=\"project-stack\">\n          {stack.map(item => {\n            return <span key={item.id}>{item.title}</span>\n          })}\n        </div>\n        <div className=\"project-links\">\n          <a href={github}>\n            <FaGithubSquare className=\"project-icon\" />\n          </a>\n          <a href={url}>\n            <FaShareSquare className=\"project-icon\" />\n          </a>\n        </div>\n      </div>\n    </article>\n  )\n}\n\n/*if you for example forget to set these fields in strapi,\nso if you forget to give them values, you will get a error in your console\n*/\nProject.propTypes = {\n  title: PropTypes.string.isRequired,\n  git: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  image: PropTypes.object.isRequired,\n  stack: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default Project\n","import React from \"react\"\nimport Title from \"./Title\"\nimport Project from \"./Project\"\nimport { Link } from \"gatsby\"\nconst Projects = ({ projects, title, showLink }) => {\n  return (\n    <section className=\"section projects\">\n      <Title title={title} />\n      <div className=\"section-center projects-center\">\n        {projects.map((project, index) => {\n          return <Project key={project.id} index={index} {...project} />\n        })}\n      </div>\n      {showLink && (\n        <Link to=\"/projects\" className=\"btn center-btn\">\n          Alla projekt\n        </Link>\n      )}\n    </section>\n  )\n}\n\nexport default Projects\n","import React from \"react\"\nimport Image from \"gatsby-image\"\nimport { Link } from \"gatsby\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport SocialLinks from \"../constants/socialLinks\"\n// ...GatsbyImageSharpFluid\n\nconst query = graphql`\n  {\n    file(relativePath: { eq: \"hero-img.png\" }) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`\n\nconst Hero = () => {\n  const {\n    file: {\n      childImageSharp: { fluid },\n    },\n  } = useStaticQuery(query)\n\n  // console.log(data)\n\n  return (\n    <header className=\"hero\">\n      <div className=\"section-center hero-center\">\n        <article className=\"hero-info\">\n          <div>\n            <h1>I'm Jonas</h1>\n            <div className=\"underline\"></div>\n            <h4>Currently studying System development at TUC,<br></br>LinkÃ¶ping</h4>\n            - ðŸ”­ Iâ€™m currently working on my own Portfolio site\n            <br />\n            - ðŸŒ± Iâ€™m currently learning React, Gatsby, GraphQL and Strapi\n            <br />\n            - ðŸ¤” Iâ€™m looking for help with anything frontend :)\n            <br />\n            - ðŸ’¬ Ask me anything related to playing pool\n            <br />\n            - ðŸ˜„ Pronouns: Inquisitive, break the mold.. <br />- ðŸ’œ{\" \"}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://strapi.io/documentation/v3.x/getting-started/introduction.html\"\n            >\n              Strapi\n            </a>\n            ,{\" \"}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://reactjs.org/docs/getting-started.html\"\n            >\n              React\n            </a>\n            ,{\" \"}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://www.gatsbyjs.org/docs/\"\n            >\n              Gatsby\n            </a>{\" \"}\n            ,{\" \"}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://styled-components.com/docs\"\n            >\n              Styled Components\n            </a>\n            <br />\n            - âš¡ Fun fact: I used to fly planes\n            <br />\n            - ðŸ“« How to reach me: use the link below :)\n            <br />\n            <Link to=\"/contact\" className=\"btn\">\n              kontakta mig\n            </Link>\n            <SocialLinks />\n          </div>\n        </article>\n        <Image fluid={fluid} className=\"hero-img\" />\n      </div>\n    </header>\n  )\n}\nexport default Hero\n","import React from \"react\"\nimport { FaCode, FaSketch, FaAndroid } from \"react-icons/fa\"\nexport default [\n  {\n    id: 1,\n    icon: <FaCode className=\"service-icon\" />,\n    title: \"web development\",\n    text: `I'm baby meditation tofu chillwave, distillery messenger bag thundercats chicharrones kale chips gochujang. Banh mi direct trade marfa salvia.`,\n  },\n  {\n    id: 2,\n    icon: <FaSketch className=\"service-icon\" />,\n    title: \"web design\",\n    text: `I'm baby meditation tofu chillwave, distillery messenger bag thundercats chicharrones kale chips gochujang. Banh mi direct trade marfa salvia.`,\n  },\n  {\n    id: 3,\n    icon: <FaAndroid className=\"service-icon\" />,\n    title: \"app design\",\n    text: `I'm baby meditation tofu chillwave, distillery messenger bag thundercats chicharrones kale chips gochujang. Banh mi direct trade marfa salvia.`,\n  },\n]\n","import React from \"react\"\nimport Title from \"./Title\"\nimport services from \"../constants/services\"\nconst Services = () => {\n  return (\n    <section className=\"section bg-grey\">\n      <Title title=\"TjÃ¤nster\" />\n      <div className=\"section-center services-center\">\n        {services.map(service => {\n          //  destructure\n          const { id, icon, title, text } = service\n\n          return (\n            <article key={id} className=\"service\">\n              {icon}\n              <h4>{title}</h4>\n              <div className=\"underline\"></div>\n              <p>{text}</p>\n            </article>\n          )\n        })}\n      </div>\n    </section>\n  )\n}\n\nexport default Services\n","import React from \"react\"\nimport Title from \"./Title\"\nimport { FaAngleDoubleRight } from \"react-icons/fa\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { Link } from \"gatsby\"\n\nconst query = graphql`\n  {\n    allStrapiJobs(sort: { fields: strapiId, order: DESC }) {\n      nodes {\n        strapiId\n        company\n        date\n        position\n        desc {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nconst Jobs = () => {\n  const data = useStaticQuery(query)\n  console.log(data)\n  // destructering\n  const {\n    allStrapiJobs: { nodes: jobs },\n  } = data\n  console.log(jobs)\n  const [value, setValue] = React.useState(0)\n  const { company, position, date, desc } = jobs[value]\n  console.log(company, position, date, desc)\n\n  return (\n    <section className=\"section jobs\">\n      <Title title=\"erfarenhet\" />\n      <div className=\"jobs-center\">\n        {/* btn container */}\n        <div className=\"btn-container\">\n          {jobs.map((item, index) => {\n            return (\n              <button\n                key={item.strapiId}\n                onClick={() => setValue(index)}\n                className={`job-btn ${index === value && \"active-btn\"}`}\n              >\n                {item.company}\n              </button>\n            )\n          })}\n        </div>\n        {/* job info */}\n        <article className=\"job-info\">\n          <h3>{position}</h3>\n          <h4>{company}</h4>\n          <p className=\"job-date\">{date}</p>\n          {desc.map(item => {\n            return (\n              <div key={item.id} className=\"job-desc\">\n                <FaAngleDoubleRight className=\"job-icon\"></FaAngleDoubleRight>\n                <p>{item.name}</p>\n              </div>\n            )\n          })}\n        </article>\n      </div>\n      <Link to=\"/about\" className=\"btn center-btn\">\n        Mitt CV\n      </Link>\n    </section>\n  )\n}\n\nexport default Jobs\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport Hero from \"../components/Hero\"\nimport Services from \"../components/Services\"\nimport Jobs from \"../components/Jobs\"\nimport Projects from \"../components/Projects\"\nimport Blogs from \"../components/Blogs\"\nimport SEO from \"../components/SEO\"\n\nexport default ({ data }) => {\n  const {\n    allStrapiProjects: { nodes: projects },\n    allStrapiBlogs: { nodes: blogs },\n  } = data\n  return (\n    <Layout>\n      <SEO title=\"Hem\" description=\"Startsidan\" />\n      <Hero />\n      <Services />\n      <Jobs />\n      <Projects projects={projects} title=\"projekt i fokus\" showLink />\n      <Blogs blogs={blogs} title=\"Senaste artiklar\" showLink />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  {\n    allStrapiProjects(filter: { featured: { eq: true } }) {\n      nodes {\n        github\n        id\n        description\n        title\n        url\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        stack {\n          id\n          title\n        }\n      }\n    }\n    allStrapiBlogs(sort: { fields: date, order: DESC }, limit: 3) {\n      nodes {\n        slug\n        content\n        desc\n        date(locale: \"sv\", formatString: \"DD MMM YYYY\")\n        id\n        title\n        category\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { Link } from \"gatsby\"\nconst Blog = ({ id, title, image, date, category, slug, desc }) => {\n  return (\n    <Link to={`/blogs/${slug}`} key={id}>\n      <article className=\"blog\">\n        {/* if image is not supplied, instead of breaking, dont show any image */}\n        {image && (\n          <Image fluid={image.childImageSharp.fluid} className=\"blog-img\" />\n        )}\n        <div className=\"blog-card\">\n          {/* if title is not supplied, set a defualt title */}\n          <h4>{title || \"Ariklar\"}</h4>\n          <p>{desc}</p>\n          <div className=\"blog-footer\">\n            <p>{category}</p>\n            <p>{date}</p>\n          </div>\n        </div>\n      </article>\n    </Link>\n  )\n}\n\nBlog.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  image: PropTypes.object.isRequired,\n  date: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  desc: PropTypes.string.isRequired,\n}\n\nexport default Blog\n","import React from \"react\"\nimport Title from \"./Title\"\nimport Blog from \"./Blog\"\nimport { Link } from \"gatsby\"\nexport const Blogs = ({ blogs, title, showLink }) => {\n  return (\n    <section className=\"section\">\n      <Title title={title} />\n      <div className=\"section-center blogs-center\">\n        {blogs.map(blog => {\n          return <Blog key={blog.id} {...blog} />\n        })}\n      </div>\n      {/* If the showLink is undefined, dont show any link, otherwise show link */}\n      {showLink && (\n        <Link to=\"/blog\" className=\"btn center-btn\">\n          Alla artiklar\n        </Link>\n      )}\n    </section>\n  )\n}\nexport default Blogs\n"],"sourceRoot":""}